// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// ต้องเชื่อม Relation +++
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Order{
  OId           String    @id @default(auto()) @map("_id") @db.ObjectId
  HId           String 
  Hname         String    @unique
  addr          String    
  cost          Float     @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime? @updatedAt
  canceledAt    DateTime? 
  service       String[]    //แก้ด้วยจ้า
  state         Int       @default(0)   
  startTime     DateTime  
  endTime       DateTime?   
  QuestionAnswer QuestionAnswer[]
  //Payment        Payment[]
}

model OrderService{
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  OId  String
  SId  String
  @@unique(fields:[OId,SId],name: "AOrderwithUniqueService")
}

model Review{
  RId       String    @id @default(auto()) @map("_id") @db.ObjectId
  HId       String
  star      Int       @default(0)
  desc      String?
  service   String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Payment{
  refId      String    @id @default(auto()) @map("_id") @db.ObjectId
  OId        String    
  bankID     String    @default("4QU") 
  balance    Float     @default(0.0)
  createdAt  DateTime  @default(now())
  Expired    DateTime? 
  isPaid     Boolean   @default(false)
  //order      Order     @relation(fields: [OID],references: [OId])
}

model Question{
  QId       String @id @default(auto()) @map("_id") @db.ObjectId
  question  String 
}

model QuestionAnswer{
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  QId String
  OId String 
  answer Boolean 
  Order Order @relation(fields: [OId],references: [OId])
  @@unique([QId,OId])
}

enum OrderState{
    CONFIRM
    CANCEL
    ONPAY
    INPROGRESS
    SUCCESS
}